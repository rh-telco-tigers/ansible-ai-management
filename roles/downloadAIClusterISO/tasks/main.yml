---
# Copyright Brandon B. Jozsa, v1k0d3n, Red Hat and other contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# - name: "Show the user the recorded currentClusterID via DUMMY_HOST"
#   debug: msg="Step 4 - Before ISO generation tasks currentClusterID {{ hostvars['DUMMY_HOST']['currentClusterID'] }}"

# Auto-generated value using: currentClusterID
- name: Auto-generated currentClusterID provided - Generating ISO
  uri:
    url: "{{ assistedInstallerURLClusters }}/{{ hostvars['DUMMY_HOST']['currentClusterID'] }}/downloads/image"
    method: POST
    # url_username: "{{ HTTP_AUTH_USERNAME }}"
    # url_password: "{{ HTTP_AUTH_PASSWORD }}"
    body_format: json
    status_code: [201]
    return_content: True
    body: {
        "ssh_public_key": "{{ userAuthSSHKeyPublic }}"
    }
  register: http_reply
  when: hostvars['DUMMY_HOST']['currentClusterID'] is defined

- debug: 
    var: http_reply.json
  when: debug
  when: hostvars['DUMMY_HOST']['currentClusterID'] is defined

# User-supplied value using: clusterID
- name: User-supplied clusterID provided - Generating ISO
  uri:
    url: "{{ assistedInstallerURLClusters }}/{{ clusterID }}/downloads/image"
    method: POST
    # url_username: "{{ HTTP_AUTH_USERNAME }}"
    # url_password: "{{ HTTP_AUTH_PASSWORD }}"
    body_format: json
    status_code: [201]
    return_content: True
    body: {
        "ssh_public_key": "{{ userAuthSSHKeyPublic }}"
    }
  register: http_reply
  when: hostvars['DUMMY_HOST']['currentClusterID'] is not defined

- debug: 
    var: http_reply.json
  when: debug
  when: hostvars['DUMMY_HOST']['currentClusterID'] is not defined
###############
- name: Downloading the cluster ISO
  uri:
    url: "{{ assistedInstallerURLClusters }}/{{ hostvars['DUMMY_HOST']['currentClusterID'] }}/downloads/image"
    method: GET
    # url_username: "{{ HTTP_AUTH_USERNAME }}"
    # url_password: "{{ HTTP_AUTH_PASSWORD }}"
    status_code: [200]
    dest: ./.clusters/{{ hostvars['DUMMY_HOST']['currentClusterID'] }}/{{ hostvars['DUMMY_HOST']['currentClusterID'] }}.iso
    follow_redirects: yes
  delegate_to: localhost
  when: hostvars['DUMMY_HOST']['currentClusterID'] is defined

- name: Downloading the cluster ISO
  uri:
    url: "{{ assistedInstallerURLClusters }}/{{ clusterID }}/downloads/image"
    method: GET
    # url_username: "{{ HTTP_AUTH_USERNAME }}"
    # url_password: "{{ HTTP_AUTH_PASSWORD }}"
    status_code: [200]
    dest: ./.clusters/{{ clusterID }}/{{ clusterID }}.iso
    follow_redirects: yes
  delegate_to: localhost
  when: hostvars['DUMMY_HOST']['currentClusterID'] is not defined

- name: Create directory to store cluster installation files
  file:
    path: ./.clusters/{{ hostvars['DUMMY_HOST']['currentClusterID'] }}/files
    state: directory
  delegate_to: localhost
  when: hostvars['DUMMY_HOST']['currentClusterID'] is defined

- name: Create directory to store cluster installation files
  file:
    path: ./.clusters/{{ clusterID }}/files
    state: directory
  delegate_to: localhost
  when: hostvars['DUMMY_HOST']['currentClusterID'] is not defined

- name: Downloading the cluster installation configuration
  uri:
    url: "{{ assistedInstallerURLClusters }}/{{ hostvars['DUMMY_HOST']['currentClusterID'] }}/install-config"
    method: GET
    # url_username: "{{ HTTP_AUTH_USERNAME }}"
    # url_password: "{{ HTTP_AUTH_PASSWORD }}"
    status_code: [200]
    # dest: ./.clusters/{{ hostvars['DUMMY_HOST']['currentClusterID'] }}/files/install-config | to_pretty_yaml
    follow_redirects: yes
  delegate_to: localhost
  register: http_reply
  when: hostvars['DUMMY_HOST']['currentClusterID'] is defined

- name: Downloading the cluster installation configuration
  uri:
    url: "{{ assistedInstallerURLClusters }}/{{ clusterID }}/install-config"
    method: GET
    # url_username: "{{ HTTP_AUTH_USERNAME }}"
    # url_password: "{{ HTTP_AUTH_PASSWORD }}"
    status_code: [200]
    # dest: ./.clusters/{{ clusterID }}/files/install-config | to_pretty_yaml
    follow_redirects: yes
  delegate_to: localhost
  register: http_reply
  when: hostvars['DUMMY_HOST']['currentClusterID'] is not defined

- local_action: copy content="{{ http_reply | to_nice_json }}" dest=./.clusters/{{ hostvars['DUMMY_HOST']['currentClusterID'] }}/files/install-config
  when: hostvars['DUMMY_HOST']['currentClusterID'] is defined

- local_action: copy content="{{ http_reply | to_nice_json }}" dest=./.clusters/{{ clusterID }}/files/install-config
  when: hostvars['DUMMY_HOST']['currentClusterID'] is not defined

- name: Downloading the cluster discovery ignition file
  uri:
    url: "{{ assistedInstallerURLClusters }}/{{ hostvars['DUMMY_HOST']['currentClusterID'] }}/discovery-ignition"
    method: GET
    # url_username: "{{ HTTP_AUTH_USERNAME }}"
    # url_password: "{{ HTTP_AUTH_PASSWORD }}"
    status_code: [200]
    # dest: ./.clusters/{{ hostvars['DUMMY_HOST']['currentClusterID'] }}/files/install-config | to_pretty_yaml
    follow_redirects: yes
  delegate_to: localhost
  register: http_reply_auto
  when: hostvars['DUMMY_HOST']['currentClusterID'] is defined

- name: Downloading the cluster discovery ignition file
  uri:
    url: "{{ assistedInstallerURLClusters }}/{{ clusterID }}/discovery-ignition"
    method: GET
    # url_username: "{{ HTTP_AUTH_USERNAME }}"
    # url_password: "{{ HTTP_AUTH_PASSWORD }}"
    status_code: [200]
    # dest: ./.clusters/{{ clusterID }}/files/install-config | to_pretty_yaml
    follow_redirects: yes
  delegate_to: localhost
  register: http_reply
  when: hostvars['DUMMY_HOST']['currentClusterID'] is not defined

- local_action: copy content="{{ http_reply_auto.json.config }}" dest=./.clusters/{{ hostvars['DUMMY_HOST']['currentClusterID'] }}/files/discovery-ignition
  when: hostvars['DUMMY_HOST']['currentClusterID'] is defined

- local_action: copy content="{{ http_reply.json.config }}" dest=./.clusters/{{ clusterID }}/files/discovery-ignition
  when: hostvars['DUMMY_HOST']['currentClusterID'] is not defined

# ##########

# - name: "Show the user the recorded currentClusterID via DUMMY_HOST"
#   debug: msg="Step 5 - After ISO generation tasks currentClusterID {{ hostvars['DUMMY_HOST']['currentClusterID'] }}"